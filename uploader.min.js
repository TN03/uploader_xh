/**
 * Copyright 2017 Christoph M. Becker
 *
 * This file is part of Uploader_XH.
 *
 * Uploader_XH is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Uploader_XH is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Uploader_XH.  If not, see <http://www.gnu.org/licenses/>.
 */

jQuery(function ($) {
    function replaceWidget(element, html) {
        initWidget($(html).replaceAll($(element)).filter(".uploader_widget").get(0));
    }

    function initWidget(element) {
        var uploadButton = $(".uploader_uploadfiles", element);

        function updateUploadButton(uploader) {
            uploadButton.prop("disabled",
                    uploader.files.length <= uploader.total.uploaded + uploader.total.failed);
        }

        $(".uploader_type, .uploader_subdir, .uploader_resize", element).change(function () {
            $.get($(this).data("url").replace("FIXME", encodeURIComponent(this.value)), {}, function (data) {
                replaceWidget(element, data);
            });
        });

        var config = $(element).data("config");
        config.container = $(".uploader_buttons", element).get(0);
        config.browse_button = $(".uploader_pickfiles", element).get(0);
        config.drop_element = element;
        config.init = ({
            PostInit: function (uploader) {
                uploadButton
                    .prop("disabled", true)
                    .click(function () {
                        uploader.start();
                        return false;
                    });
                uploader.bind("UploadComplete", updateUploadButton);
            },
            FilesAdded: function (uploader, files) {
                $.each(files, function () {
                    var file = this;
                    $(".uploader_row_template", element).clone()
                        .removeClass("uploader_row_template").addClass("uploader_row")
                        .prop("id", this.id)
                        .find(".uploader_filename").text(this.name).end()
                        .find(".uploader_size").text(plupload.formatSize(this.size)).end()
                        .find(".uploader_progress").text("0%").end()
                        .find(".uploader_remove").click(function () {
                            uploader.removeFile(file);
                            $(this).parents(".uploader_row").remove();
                            updateUploadButton(uploader);
                        }).end()
                        .appendTo($(".uploader_filelist", element));
                });
                updateUploadButton(uploader);
            },
            UploadProgress: function (uploader, file) {
                $("#" + file.id).find(".uploader_progress").text(file.percent + "%");
                updateUploadButton(uploader);
            },
            Error: function (uploader, err) {
                var message = err.message;
                if (err.file) {
                    message = err.file.name + ": " + message;
                    $("#" + err.file.id).find(".uploader_progress").text(i18n.error_error);
                }
                alert(message);
            }
        });

        new plupload.Uploader(config).init();
    }

    var i18n = $("#uploader_i18n").data("i18n");

    $(".uploader_placeholder").each(function () {
        var placeholder = this;
        $.get(location.href, {uploader_serial: $(this).data("serial")}, function (data) {
            replaceWidget(placeholder, data);
        });
    });
});
