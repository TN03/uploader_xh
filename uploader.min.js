/**
 * Copyright 2017 Christoph M. Becker
 *
 * This file is part of Uploader_XH.
 *
 * Uploader_XH is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Uploader_XH is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Uploader_XH.  If not, see <http://www.gnu.org/licenses/>.
 */

document.addEventListener("DOMContentLoaded", function () {
    function makeWidget(element) {
        function relocate() {
            var url = this.getAttribute("data-url");
            url += encodeURIComponent(this.value);
            location.href = url;
        };
        
        var classes = ["uploader_type", "uploader_subdir", "uploader_resize"];
        classes.forEach(function (className) {
            var elements = element.getElementsByClassName(className);
            if (elements.length) {
                elements[0].onchange = relocate;
            }
        });

        var config = JSON.parse(element.getAttribute("data-config"));
        config.container = element.getElementsByClassName("uploader_container")[0];
        config.browse_button = element.getElementsByClassName("uploader_pickfiles")[0];
        config.drop_element = element;
        config.init = ({
            PostInit: function(uploader) {
                element.getElementsByClassName("uploader_filelist")[0].innerHTML = '';
        
                element.getElementsByClassName("uploader_uploadfiles")[0].onclick = function() {
                    uploader.start();
                    return false;
                };
            },
            FilesAdded: function(up, files) {
                plupload.each(files, function(file) {
                    element.getElementsByClassName("uploader_filelist")[0].innerHTML += '<div id="' + file.id + '">' + file.name + ' (' + plupload.formatSize(file.size) + ') <b></b></div>';
                });
            },
            UploadProgress: function(up, file) {
                document.getElementById(file.id).getElementsByTagName('b')[0].innerHTML = '<span>' + file.percent + "%</span>";
            },
        
            Error: function(up, err) {
                element.getElementsByClassName("uploader_console")[0].innerHTML += "\nError #" + err.code + ": " + err.message;
            }
        });
        new plupload.Uploader(config).init();
    }

    Array.prototype.forEach.call(document.getElementsByClassName("uploader_widget"), makeWidget);
});
